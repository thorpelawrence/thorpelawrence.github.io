{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/carbon-components-svelte/src/Link/Link.svelte","../../node_modules/carbon-components-svelte/src/Button/ButtonSkeleton.svelte","../../node_modules/carbon-components-svelte/src/Button/Button.svelte","../../node_modules/carbon-components-svelte/src/Copy/Copy.svelte","../../node_modules/carbon-icons-svelte/lib/Copy16/Copy16.svelte","../../node_modules/carbon-components-svelte/src/CopyButton/CopyButton.svelte","../../node_modules/carbon-icons-svelte/lib/ChevronDown16/ChevronDown16.svelte","../../node_modules/carbon-icons-svelte/lib/Close20/Close20.svelte","../../node_modules/carbon-components-svelte/src/CodeSnippet/CodeSnippetSkeleton.svelte","../../node_modules/carbon-components-svelte/src/CodeSnippet/CodeSnippet.svelte","../../node_modules/carbon-components-svelte/src/Grid/Grid.svelte","../../node_modules/carbon-components-svelte/src/Grid/Row.svelte","../../node_modules/carbon-components-svelte/src/Grid/Column.svelte","../../node_modules/carbon-components-svelte/src/Icon/IconSkeleton.svelte","../../node_modules/carbon-components-svelte/src/Icon/Icon.svelte","../../node_modules/carbon-components-svelte/src/ListItem/ListItem.svelte","../../node_modules/carbon-components-svelte/src/StructuredList/StructuredList.svelte","../../node_modules/carbon-components-svelte/src/StructuredList/StructuredListBody.svelte","../../node_modules/carbon-components-svelte/src/StructuredList/StructuredListCell.svelte","../../node_modules/carbon-components-svelte/src/StructuredList/StructuredListRow.svelte","../../node_modules/carbon-components-svelte/src/Tile/Tile.svelte","../../node_modules/carbon-components-svelte/src/UIShell/navStore.js","../../node_modules/carbon-icons-svelte/lib/Menu20/Menu20.svelte","../../node_modules/carbon-components-svelte/src/UIShell/SideNav/HamburgerMenu.svelte","../../node_modules/carbon-components-svelte/src/UIShell/GlobalHeader/Header.svelte","../../node_modules/carbon-components-svelte/src/UIShell/GlobalHeader/HeaderActionLink.svelte","../../node_modules/carbon-components-svelte/src/UIShell/GlobalHeader/HeaderUtilities.svelte","../../node_modules/carbon-components-svelte/src/UIShell/Content.svelte","../../node_modules/carbon-components-svelte/src/UIShell/SkipToContent.svelte","../../node_modules/carbon-components-svelte/src/UIShell/HeaderGlobalAction.svelte","../../node_modules/carbon-components-svelte/src/UnorderedList/UnorderedList.svelte","../../node_modules/carbon-icons-svelte/lib/FingerprintRecognition20/FingerprintRecognition20.svelte","../../node_modules/carbon-icons-svelte/lib/LogoGithub20/LogoGithub20.svelte","../../node_modules/carbon-icons-svelte/lib/Sun24/Sun24.svelte","../../node_modules/carbon-icons-svelte/lib/Moon24/Moon24.svelte","../../src/ToggleTheme.svelte","../../src/Header.svelte","../../node_modules/carbon-icons-svelte/lib/LogoGithub32/LogoGithub32.svelte","../../node_modules/carbon-icons-svelte/lib/LogoLinkedin32/LogoLinkedin32.svelte","../../node_modules/carbon-icons-svelte/lib/LogoTwitter32/LogoTwitter32.svelte","../../node_modules/carbon-icons-svelte/lib/LogoInstagram32/LogoInstagram32.svelte","../../node_modules/carbon-icons-svelte/lib/LogoSnapchat32/LogoSnapchat32.svelte","../../node_modules/carbon-icons-svelte/lib/LogoFacebook32/LogoFacebook32.svelte","../../node_modules/carbon-icons-svelte/lib/LogoYoutube32/LogoYoutube32.svelte","../../node_modules/carbon-icons-svelte/lib/Email32/Email32.svelte","../../src/Footer.svelte","../../node_modules/clipboard-copy/index.js","../../node_modules/carbon-icons-svelte/lib/Camera16/Camera16.svelte","../../src/common/Caption.svelte","../../src/Landing.svelte","../../node_modules/carbon-icons-svelte/lib/DocumentPdf16/DocumentPdf16.svelte","../../src/About.svelte","../../src/Projects.svelte","../../src/Certification.svelte","../../node_modules/carbon-icons-svelte/lib/Laptop16/Laptop16.svelte","../../node_modules/carbon-icons-svelte/lib/Hashtag16/Hashtag16.svelte","../../node_modules/carbon-icons-svelte/lib/GameConsole16/GameConsole16.svelte","../../src/Events.svelte","../../src/EndCard.svelte","../../src/main.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","<script>\n  /**\n   * Specify the size of the link\n   * @type {\"sm\" | \"lg\"}\n   */\n  export let size = undefined;\n\n  /**\n   * Specify the href value\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /** Set to `true` to use the inline variant */\n  export let inline = false;\n\n  /** Set to `true` to disable the checkbox */\n  export let disabled = false;\n\n  /** Set to `true` to allow visited styles */\n  export let visited = false;\n\n  /** Obtain a reference to the top-level HTML element */\n  export let ref = null;\n</script>\n\n{#if disabled}\n  <p\n    bind:this=\"{ref}\"\n    class:bx--link=\"{true}\"\n    class:bx--link--disabled=\"{disabled}\"\n    class:bx--link--inline=\"{inline}\"\n    class:bx--link--visited=\"{visited}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    <slot />\n  </p>\n{:else}\n  <!-- svelte-ignore a11y-missing-attribute -->\n  <a\n    bind:this=\"{ref}\"\n    class:bx--link=\"{true}\"\n    class:bx--link--disabled=\"{disabled}\"\n    class:bx--link--inline=\"{inline}\"\n    class:bx--link--visited=\"{visited}\"\n    class:bx--link--sm=\"{size === 'sm'}\"\n    class:bx--link--lg=\"{size === 'lg'}\"\n    rel=\"{$$restProps.target === '_blank' ? 'noopener noreferrer' : undefined}\"\n    href=\"{href}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    <slot />\n  </a>\n{/if}\n","<script>\n  /**\n   * Set the `href` to use an anchor link\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /**\n   * Specify the size of button skeleton\n   * @type {\"default\" | \"field\" | \"small\"}\n   */\n  export let size = \"default\";\n\n  /**\n   * @deprecated this prop will be removed in the next major release\n   * Use size=\"small\" instead\n   */\n  export let small = false;\n</script>\n\n{#if href}\n  <a\n    href=\"{href}\"\n    rel=\"{$$restProps.target === '_blank' ? 'noopener noreferrer' : undefined}\"\n    role=\"button\"\n    class:bx--skeleton=\"{true}\"\n    class:bx--btn=\"{true}\"\n    class:bx--btn--field=\"{size === 'field'}\"\n    class:bx--btn--sm=\"{size === 'small' || small}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    {''}\n  </a>\n{:else}\n  <div\n    class:bx--skeleton=\"{true}\"\n    class:bx--btn=\"{true}\"\n    class:bx--btn--field=\"{size === 'field'}\"\n    class:bx--btn--sm=\"{size === 'small' || small}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  ></div>\n{/if}\n","<script>\n  /**\n   * @extends {\"./ButtonSkeleton\"} ButtonSkeletonProps\n   * @restProps {button | a | div}\n   * @slot {{ props: { role: \"button\"; type?: string; tabindex: any; disabled: boolean; href?: string; class: string; [key: string]: any; } }}\n   */\n\n  /**\n   * Specify the kind of button\n   * @type {\"primary\" | \"secondary\" | \"tertiary\" | \"ghost\" | \"danger\" | \"danger-tertiary\" | \"danger-ghost\"}\n   */\n  export let kind = \"primary\";\n\n  /**\n   * Specify the size of button\n   * @type {\"default\" | \"field\" | \"small\"}\n   */\n  export let size = \"default\";\n\n  /** Set to `true` for the icon-only variant */\n  export let hasIconOnly = false;\n\n  /**\n   * Specify the icon from `carbon-icons-svelte` to render\n   * @type {typeof import(\"carbon-icons-svelte\").CarbonIcon}\n   */\n  export let icon = undefined;\n\n  /**\n   * Specify the ARIA label for the button icon\n   * @type {string}\n   */\n  export let iconDescription = undefined;\n\n  /**\n   * Set the alignment of the tooltip relative to the icon\n   * `hasIconOnly` must be set to `true`\n   * @type {\"start\" | \"center\" | \"end\"}\n   */\n  export let tooltipAlignment = undefined;\n\n  /**\n   * Set the position of the tooltip relative to the icon\n   * @type {\"top\" | \"right\" | \"bottom\" | \"left\"}\n   */\n  export let tooltipPosition = undefined;\n\n  /**\n   * Set to `true` to render a custom HTML element\n   * Props are destructured as `props` in the default slot (e.g., <Button let:props><div {...props}>...</div></Button>)\n   */\n  export let as = false;\n\n  /** Set to `true` to display the skeleton state */\n  export let skeleton = false;\n\n  /** Set to `true` to disable the button */\n  export let disabled = false;\n\n  /**\n   * Set the `href` to use an anchor link\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /** Specify the tabindex */\n  export let tabindex = \"0\";\n\n  /** Specify the `type` attribute for the button element */\n  export let type = \"button\";\n\n  /** Obtain a reference to the HTML element */\n  export let ref = null;\n\n  import { getContext } from \"svelte\";\n  import ButtonSkeleton from \"./ButtonSkeleton.svelte\";\n\n  const ctx = getContext(\"ComposedModal\");\n\n  $: if (ctx && ref) {\n    ctx.declareRef(ref);\n  }\n  $: buttonProps = {\n    role: \"button\",\n    type: href && !disabled ? undefined : type,\n    tabindex,\n    disabled,\n    href,\n    ...$$restProps,\n    class: [\n      \"bx--btn\",\n      size === \"field\" && \"bx--btn--field\",\n      size === \"small\" && \"bx--btn--sm\",\n      kind && `bx--btn--${kind}`,\n      disabled && \"bx--btn--disabled\",\n      hasIconOnly && \"bx--btn--icon-only\",\n      hasIconOnly && \"bx--tooltip__trigger\",\n      hasIconOnly && \"bx--tooltip--a11y\",\n      hasIconOnly && tooltipPosition && `bx--tooltip--${tooltipPosition}`,\n      hasIconOnly &&\n        tooltipAlignment &&\n        `bx--tooltip--align-${tooltipAlignment}`,\n      $$restProps.class,\n    ]\n      .filter(Boolean)\n      .join(\" \"),\n  };\n</script>\n\n{#if skeleton}\n  <ButtonSkeleton\n    href=\"{href}\"\n    size=\"{size}\"\n    {...$$restProps}\n    style=\"{hasIconOnly && 'width: 3rem;'}\"\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  />\n{:else}\n  {#if as}\n    <slot props=\"{buttonProps}\" />\n  {:else if href && !disabled}\n    <!-- svelte-ignore a11y-missing-attribute -->\n    <a\n      bind:this=\"{ref}\"\n      {...buttonProps}\n      on:click\n      on:mouseover\n      on:mouseenter\n      on:mouseleave\n    >\n      {#if hasIconOnly}\n        <span class:bx--assistive-text=\"{true}\">{iconDescription}</span>\n      {/if}\n      <slot />\n      <svelte:component\n        this=\"{icon}\"\n        aria-hidden=\"true\"\n        class=\"bx--btn__icon\"\n        aria-label=\"{iconDescription}\"\n      />\n    </a>\n  {:else}\n    <button\n      bind:this=\"{ref}\"\n      {...buttonProps}\n      on:click\n      on:mouseover\n      on:mouseenter\n      on:mouseleave\n    >\n      {#if hasIconOnly}\n        <span class:bx--assistive-text=\"{true}\">{iconDescription}</span>\n      {/if}\n      <slot />\n      <svelte:component\n        this=\"{icon}\"\n        aria-hidden=\"true\"\n        class=\"bx--btn__icon\"\n        aria-label=\"{iconDescription}\"\n      />\n    </button>\n  {/if}\n{/if}\n","<script>\n  /** Set the feedback text shown after clicking the button */\n  export let feedback = \"Copied!\";\n\n  /** Set the timeout duration (ms) to display feedback text */\n  export let feedbackTimeout = 2000;\n\n  /** Obtain a reference to the button HTML element */\n  export let ref = null;\n\n  import { onMount } from \"svelte\";\n\n  let animation = undefined;\n  let timeout = undefined;\n\n  onMount(() => {\n    return () => {\n      clearTimeout(timeout);\n    };\n  });\n</script>\n\n<button\n  bind:this=\"{ref}\"\n  type=\"button\"\n  aria-live=\"polite\"\n  class:bx--copy=\"{true}\"\n  class:bx--copy-btn--animating=\"{animation}\"\n  aria-label=\"{animation ? feedback : undefined}\"\n  {...$$restProps}\n  class=\"{$$restProps.class} {animation && `bx--copy-btn--${animation}`}\"\n  on:click\n  on:click=\"{() => {\n    if (animation === 'fade-in') return;\n    animation = 'fade-in';\n    timeout = setTimeout(() => {\n      animation = 'fade-out';\n    }, feedbackTimeout);\n  }}\"\n  on:animationend\n  on:animationend=\"{({ animationName }) => {\n    if (animationName === 'hide-feedback') {\n      animation = undefined;\n    }\n  }}\"\n>\n  <slot>\n    {#if animation}{feedback || $$restProps['aria-label']}{/if}\n  </slot>\n  <span\n    aria-hidden=\"true\"\n    class:bx--assistive-text=\"{true}\"\n    class:bx--copy-btn__feedback=\"{true}\"\n  >\n    {feedback}\n  </span>\n</button>\n","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Copy16\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"16\" height=\"16\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M28,10V28H10V10H28m0-2H10a2,2,0,0,0-2,2V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V10a2,2,0,0,0-2-2Z\"></path><path d=\"M4,18H2V4A2,2,0,0,1,4,2H18V4H4Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  /** @extends {\"../Copy/Copy\"} CopyProps */\n\n  /** Set the title and ARIA label for the copy button */\n  export let iconDescription = \"Copy to clipboard\";\n\n  import { Copy } from \"../Copy\";\n  import Copy16 from \"carbon-icons-svelte/lib/Copy16\";\n</script>\n\n<Copy\n  class=\"bx--copy-btn\"\n  aria-label=\"{iconDescription}\"\n  title=\"{iconDescription}\"\n  {...$$restProps}\n  on:click\n  on:animationend\n>\n  <Copy16 class=\"bx--snippet__icon\" />\n</Copy>\n","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"ChevronDown16\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" fill=\"currentColor\" width=\"16\" height=\"16\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Close20\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"20\" height=\"20\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  /**\n   * Set the type of code snippet\n   * @type {\"single\" | \"multi\"}\n   */\n  export let type = \"single\";\n</script>\n\n<div\n  class:bx--skeleton=\"{true}\"\n  class:bx--snippet=\"{true}\"\n  class:bx--snippet--single=\"{type === 'single'}\"\n  class:bx--snippet--multi=\"{type === 'multi'}\"\n  {...$$restProps}\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <div class:bx--snippet-container=\"{true}\">\n    {#if type === 'single'}\n      <span></span>\n    {:else if type === 'multi'}<span></span> <span></span> <span></span>{/if}\n  </div>\n</div>\n","<script>\n  /**\n   * Set the type of code snippet\n   * @type {\"single\" | \"inline\" | \"multi\"}\n   */\n  export let type = \"single\";\n\n  /**\n   * Set the code snippet text\n   * Alternatively, use the default slot (e.g., <CodeSnippet>{`code`}</CodeSnippet>)\n   * @type {string}\n   */\n  export let code = undefined;\n\n  /** Set to `true` to expand a multi-line code snippet (type=\"multi\") */\n  export let expanded = false;\n\n  /** Set to `true` to hide the copy button */\n  export let hideCopyButton = false;\n\n  /**\n   * Set to `true` to wrap the text\n   * Note that `type` must be \"multi\"\n   */\n  export let wrapText = false;\n\n  /** Set to `true` to enable the light variant */\n  export let light = false;\n\n  /** Set to `true` to display the skeleton state */\n  export let skeleton = false;\n\n  /**\n   * Specify the ARIA label for the copy button icon\n   * @type {string}\n   */\n  export let copyButtonDescription = undefined;\n\n  /**\n   * Specify the ARIA label of the copy button\n   * @type {string}\n   */\n  export let copyLabel = undefined;\n\n  /** Specify the feedback text displayed when clicking the snippet */\n  export let feedback = \"Copied!\";\n\n  /** Set the timeout duration (ms) to display feedback text */\n  export let feedbackTimeout = 2000;\n\n  /**\n   * Specify the show less text\n   * `type` must be \"multi\"\n   */\n  export let showLessText = \"Show less\";\n\n  /**\n   * Specify the show more text\n   * `type` must be \"multi\"\n   */\n  export let showMoreText = \"Show more\";\n\n  /** Set to `true` to enable the show more/less button */\n  export let showMoreLess = false;\n\n  /** Set an id for the code element */\n  export let id = \"ccs-\" + Math.random().toString(36);\n\n  /** Obtain a reference to the pre HTML element */\n  export let ref = null;\n\n  import { tick } from \"svelte\";\n  import ChevronDown16 from \"carbon-icons-svelte/lib/ChevronDown16/ChevronDown16.svelte\";\n  import Button from \"../Button/Button.svelte\";\n  import Copy from \"../Copy/Copy.svelte\";\n  import CopyButton from \"../CopyButton/CopyButton.svelte\";\n  import CodeSnippetSkeleton from \"./CodeSnippetSkeleton.svelte\";\n\n  function setShowMoreLess() {\n    const { height } = ref.getBoundingClientRect();\n    if (height > 0) showMoreLess = ref.getBoundingClientRect().height > 255;\n  }\n\n  $: expandText = expanded ? showLessText : showMoreText;\n  $: if (type === \"multi\" && ref) {\n    if (code === undefined) setShowMoreLess();\n    if (code) tick().then(setShowMoreLess);\n  }\n</script>\n\n{#if skeleton}\n  <CodeSnippetSkeleton\n    type=\"{type}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  />\n{:else}\n  {#if type === 'inline'}\n    {#if hideCopyButton}\n      <span\n        class:bx--snippet=\"{true}\"\n        class:bx--snippet--expand=\"{expanded}\"\n        class:bx--snippet--light=\"{light}\"\n        class:bx--snippet--no-copy=\"{hideCopyButton}\"\n        class:bx--snippet--wraptext=\"{wrapText}\"\n        class:bx--snippet--single=\"{type === 'single'}\"\n        class:bx--snippet--inline=\"{type === 'inline'}\"\n        class:bx--snippet--multi=\"{type === 'multi'}\"\n        {...$$restProps}\n      >\n        <code id=\"{id}\">\n          <slot>{code}</slot>\n        </code>\n      </span>\n    {:else}\n      <Copy\n        aria-label=\"{copyLabel}\"\n        aria-describedby=\"{id}\"\n        feedback=\"{feedback}\"\n        feedbackTimeout=\"{feedbackTimeout}\"\n        class=\"bx--snippet {type && `bx--snippet--${type}`}\n          {type === 'inline' && 'bx--btn--copy'}\n          {expanded && 'bx--snippet--expand'}\n          {light && 'bx--snippet--light'}\n          {hideCopyButton && 'bx--snippet--no-copy'}\n          {wrapText && 'bx--snippet--wraptext'}\"\n        {...$$restProps}\n        on:click\n        on:mouseover\n        on:mouseenter\n        on:mouseleave\n      >\n        <code id=\"{id}\">\n          <slot>{code}</slot>\n        </code>\n      </Copy>\n    {/if}\n  {:else}\n    <div\n      class:bx--snippet=\"{true}\"\n      class:bx--btn--copy=\"{type === 'inline'}\"\n      class:bx--snippet--expand=\"{expanded}\"\n      class:bx--snippet--light=\"{light}\"\n      class:bx--snippet--no-copy=\"{hideCopyButton}\"\n      class:bx--snippet--wraptext=\"{wrapText}\"\n      class:bx--snippet--single=\"{type === 'single'}\"\n      class:bx--snippet--inline=\"{type === 'inline'}\"\n      class:bx--snippet--multi=\"{type === 'multi'}\"\n      {...$$restProps}\n      on:mouseover\n      on:mouseenter\n      on:mouseleave\n    >\n      <div\n        role=\"{type === 'single' ? 'textbox' : undefined}\"\n        tabindex=\"{type === 'single' ? '0' : undefined}\"\n        aria-label=\"{$$restProps['aria-label'] || copyLabel || 'code-snippet'}\"\n        class:bx--snippet-container=\"{true}\"\n      >\n        <code>\n          <pre bind:this=\"{ref}\">\n            <slot>{code}</slot>\n          </pre>\n        </code>\n      </div>\n      {#if !hideCopyButton}\n        <CopyButton\n          feedback=\"{feedback}\"\n          feedbackTimeout=\"{feedbackTimeout}\"\n          iconDescription=\"{copyButtonDescription}\"\n          on:click\n          on:animationend\n        />\n      {/if}\n      {#if showMoreLess}\n        <Button\n          kind=\"ghost\"\n          size=\"small\"\n          class=\"bx--snippet-btn--expand\"\n          on:click=\"{() => {\n            expanded = !expanded;\n          }}\"\n        >\n          <span class:bx--snippet-btn--text=\"{true}\">{expandText}</span>\n          <ChevronDown16\n            class=\"bx--icon-chevron--down bx--snippet__icon\"\n            aria-label=\"{expandText}\"\n          />\n        </Button>\n      {/if}\n    </div>\n  {/if}\n{/if}\n","<script>\n  /**\n   * @restProps {div}\n   * @slot {{ props: { class: string; [key: string]: any; } }}\n   */\n\n  /**\n   * Set to `true` to render a custom HTML element\n   * Props are destructured as `props` in the default slot (e.g., <Grid let:props><header {...props}>...</header></Grid>)\n   */\n  export let as = false;\n\n  /** Set to `true` to use the condensed variant */\n  export let condensed = false;\n\n  /** Set to `true` to use the narrow variant */\n  export let narrow = false;\n\n  /** Set to `true` to use the fullWidth variant */\n  export let fullWidth = false;\n\n  /** Set to `true` to remove the gutter */\n  export let noGutter = false;\n\n  /** Set to `true` to remove the left gutter */\n  export let noGutterLeft = false;\n\n  /** Set to `true` to remove the right gutter */\n  export let noGutterRight = false;\n\n  /** Set to `true` to add top and bottom padding to all columns */\n  export let padding = false;\n\n  $: props = {\n    ...$$restProps,\n    class: [\n      $$restProps.class,\n      \"bx--grid\",\n      condensed && \"bx--grid--condensed\",\n      narrow && \"bx--grid--narrow\",\n      fullWidth && \"bx--grid--full-width\",\n      noGutter && \"bx--no-gutter\",\n      noGutterLeft && \"bx--no-gutter--left\",\n      noGutterRight && \"bx--no-gutter--right\",\n      padding && \"bx--row-padding\",\n    ]\n      .filter(Boolean)\n      .join(\" \"),\n  };\n</script>\n\n{#if as}\n  <slot props=\"{props}\" />\n{:else}\n  <div {...props}>\n    <slot />\n  </div>\n{/if}\n","<script>\n  /**\n   * @restProps {div}\n   * @slot {{ props: { class: string; [key: string]: any; } }}\n   */\n\n  /**\n   * Set to `true` to render a custom HTML element\n   * Props are destructured as `props` in the default slot (e.g., <Row let:props><section {...props}>...</section></Row>)\n   */\n  export let as = false;\n\n  /** Set to `true` to use the condensed variant */\n  export let condensed = false;\n\n  /** Set to `true` to use the narrow variant */\n  export let narrow = false;\n\n  /** Set to `true` to remove the gutter */\n  export let noGutter = false;\n\n  /** Set to `true` to remove the left gutter */\n  export let noGutterLeft = false;\n\n  /** Set to `true` to remove the right gutter */\n  export let noGutterRight = false;\n\n  /** Set to `true` to add top and bottom padding to all columns */\n  export let padding = false;\n\n  $: props = {\n    ...$$restProps,\n    class: [\n      $$restProps.class,\n      \"bx--row\",\n      condensed && \"bx--row--condensed\",\n      narrow && \"bx--row--narrow\",\n      noGutter && \"bx--no-gutter\",\n      noGutterLeft && \"bx--no-gutter--left\",\n      noGutterRight && \"bx--no-gutter--right\",\n      padding && \"bx--row-padding\",\n    ]\n      .filter(Boolean)\n      .join(\" \"),\n  };\n</script>\n\n{#if as}\n  <slot props=\"{props}\" />\n{:else}\n  <div {...props}>\n    <slot />\n  </div>\n{/if}\n","<script>\n  /**\n   * @typedef {boolean | number} ColumnSize\n   * @typedef {{span?: ColumnSize; offset: number;}} ColumnSizeDescriptor\n   * @typedef {ColumnSize | ColumnSizeDescriptor} ColumnBreakpoint\n   * @restProps {div}\n   * @slot {{props: { class: string; [key: string]: any; }}}\n   */\n\n  /**\n   * @slot {{ props?: { class: string; } }}\n   */\n\n  /**\n   * Set to `true` to render a custom HTML element\n   * Props are destructured as `props` in the default slot (e.g., <Column let:props><article {...props}>...</article></Column>)\n   */\n  export let as = false;\n\n  /** Set to `true` to remove the gutter */\n  export let noGutter = false;\n\n  /** Set to `true` to remove the left gutter */\n  export let noGutterLeft = false;\n\n  /** Set to `true` to remove the right gutter */\n  export let noGutterRight = false;\n\n  /** Set to `true` to add top and bottom padding to the column */\n  export let padding = false;\n\n  /**\n   * Specify the aspect ratio of the column\n   * @type {\"2x1\" | \"16x9\" | \"9x16\" | \"1x2\" | \"4x3\" | \"3x4\" | \"1x1\"}\n   */\n  export let aspectRatio = undefined;\n\n  /**\n   * Set the small breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let sm = undefined;\n\n  /**\n   * Set the medium breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let md = undefined;\n\n  /**\n   * Set the large breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let lg = undefined;\n\n  /**\n   * Set the extra large breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let xlg = undefined;\n\n  /**\n   * Set the maximum breakpoint\n   * @type {ColumnBreakpoint}\n   */\n  export let max = undefined;\n\n  const breakpoints = [\"sm\", \"md\", \"lg\", \"xlg\", \"max\"];\n\n  $: columnClass = [sm, md, lg, xlg, max]\n    .map((breakpoint, i) => {\n      const name = breakpoints[i];\n\n      if (breakpoint === true) {\n        return `bx--col-${name}`;\n      } else if (typeof breakpoint === \"number\") {\n        return `bx--col-${name}-${breakpoint}`;\n      } else if (typeof breakpoint === \"object\") {\n        let bp = [];\n\n        if (typeof breakpoint.span === \"number\") {\n          bp = [...bp, `bx--col-${name}-${breakpoint.span}`];\n        } else if (breakpoint.span === true) {\n          bp = [...bp, `bx--col-${name}`];\n        }\n\n        if (typeof breakpoint.offset === \"number\") {\n          bp = [...bp, `bx--offset-${name}-${breakpoint.offset}`];\n        }\n\n        return bp.join(\" \");\n      }\n    })\n    .filter(Boolean)\n    .join(\" \");\n  $: props = {\n    ...$$restProps,\n    class: [\n      $$restProps.class,\n      columnClass,\n      !columnClass && \"bx--col\",\n      noGutter && \"bx--no-gutter\",\n      noGutterLeft && \"bx--no-gutter--left\",\n      noGutterRight && \"bx--no-gutter--right\",\n      aspectRatio && `bx--aspect-ratio bx--aspect-ratio--${aspectRatio}`,\n      padding && \"bx--col-padding\",\n    ]\n      .filter(Boolean)\n      .join(\" \"),\n  };\n</script>\n\n{#if as}\n  <slot props=\"{props}\" />\n{:else}\n  <div {...props}>\n    <slot />\n  </div>\n{/if}\n","<script>\n  /** Set the size of the icon */\n  export let size = 16;\n</script>\n\n<div\n  class:bx--icon--skeleton=\"{true}\"\n  {...$$restProps}\n  style=\"{$$restProps.style}; width: {size}px; height: {size}px\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n></div>\n","<script>\n  /**\n   * @extends {\"./IconSkeleton\"} IconSkeletonProps\n   * @restProps {svg}\n   */\n\n  /**\n   * Specify the icon from `carbon-icons-svelte` to render\n   * @type {typeof import(\"carbon-icons-svelte\").CarbonIcon}\n   */\n  export let render = undefined;\n\n  /** Set to `true` to display the skeleton state */\n  export let skeleton = false;\n\n  import IconSkeleton from \"./IconSkeleton.svelte\";\n</script>\n\n{#if skeleton}\n  <IconSkeleton\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  />\n{:else}\n  <svelte:component\n    this=\"{render}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  />\n{/if}\n","<li\n  class:bx--list__item=\"{true}\"\n  {...$$restProps}\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <slot />\n</li>\n","<script>\n  /**\n   * Specify the selected structured list row value\n   * @type {string}\n   */\n  export let selected = undefined;\n\n  /** Set to `true` to use the bordered variant */\n  export let border = false;\n\n  /** Set to `true` to use the selection variant */\n  export let selection = false;\n\n  import { createEventDispatcher, setContext } from \"svelte\";\n  import { writable } from \"svelte/store\";\n\n  const dispatch = createEventDispatcher();\n  const selectedValue = writable(selected);\n\n  setContext(\"StructuredListWrapper\", {\n    selectedValue,\n    update: (value) => {\n      selectedValue.set(value);\n    },\n  });\n\n  $: selected = $selectedValue;\n  $: dispatch(\"change\", $selectedValue);\n</script>\n\n<div\n  aria-label=\"Structured list section\"\n  class:bx--structured-list=\"{true}\"\n  class:bx--structured-list--border=\"{border}\"\n  class:bx--structured-list--selection=\"{selection}\"\n  {...$$restProps}\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <slot />\n</div>\n","<div\n  class:bx--structured-list-tbody=\"{true}\"\n  {...$$restProps}\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <slot />\n</div>\n","<script>\n  /** Set to `true` to use as a header */\n  export let head = false;\n\n  /** Set to `true` to prevent wrapping */\n  export let noWrap = false;\n</script>\n\n<div\n  class:bx--structured-list-th=\"{head}\"\n  class:bx--structured-list-td=\"{!head}\"\n  class:bx--structured-list-content--nowrap=\"{noWrap}\"\n  {...$$restProps}\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <slot />\n</div>\n","<script>\n  /** Set to `true` to use as a header */\n  export let head = false;\n\n  /** Set to `true` to render a label slot */\n  export let label = false;\n\n  /** Specify the tabindex */\n  export let tabindex = \"0\";\n</script>\n\n{#if label}\n  <!-- svelte-ignore a11y-label-has-associated-control -->\n  <label\n    role=\"presentation\"\n    tabindex=\"{tabindex}\"\n    class:bx--structured-list-row=\"{true}\"\n    class:bx--structured-list-row--header-row=\"{head}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n    on:keydown\n  >\n    <slot />\n  </label>\n{:else}\n  <div\n    class:bx--structured-list-row=\"{true}\"\n    class:bx--structured-list-row--header-row=\"{head}\"\n    {...$$restProps}\n    on:click\n    on:mouseover\n    on:mouseenter\n    on:mouseleave\n  >\n    <slot />\n  </div>\n{/if}\n","<script>\n  /** Set to `true` to enable the light variant */\n  export let light = false;\n</script>\n\n<div\n  class:bx--tile=\"{true}\"\n  class:bx--tile--light=\"{light}\"\n  {...$$restProps}\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <slot />\n</div>\n","import { writable } from \"svelte/store\";\n\nexport const shouldRenderHamburgerMenu = writable(false);\n","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Menu20\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" width=\"20\" height=\"20\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M2 14.8H18V16H2zM2 11.2H18V12.399999999999999H2zM2 7.6H18V8.799999999999999H2zM2 4H18V5.2H2z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  /**\n   * Specify the ARIA label for the button\n   * @type {string}\n   */\n  export let ariaLabel = undefined;\n\n  /** Set to `true` to toggle the open state */\n  export let isOpen = false;\n\n  /** Obtain a reference to the HTML button element */\n  export let ref = null;\n\n  import Close20 from \"carbon-icons-svelte/lib/Close20\";\n  import Menu20 from \"carbon-icons-svelte/lib/Menu20\";\n  import { Icon } from \"../../Icon\";\n</script>\n\n<button\n  bind:this=\"{ref}\"\n  type=\"button\"\n  title=\"Open menu\"\n  aria-label=\"{ariaLabel}\"\n  class:bx--header__action=\"{true}\"\n  class:bx--header__menu-trigger=\"{true}\"\n  class:bx--header__menu-toggle=\"{true}\"\n  {...$$restProps}\n  on:click\n  on:click=\"{() => (isOpen = !isOpen)}\"\n>\n  <Icon\n    title=\"{isOpen ? 'Close' : 'Open Menu'}\"\n    render=\"{isOpen ? Close20 : Menu20}\"\n  />\n</button>\n","<script>\n  /** Set to `false` to hide the side nav by default */\n  export let expandedByDefault = true;\n\n  /** Set to `true` to open the side nav */\n  export let isSideNavOpen = false;\n\n  /**\n   * Specify the ARIA label for the header\n   * @type {string}\n   */\n  export let uiShellAriaLabel = undefined;\n\n  /**\n   * Specify the `href` attribute\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /**\n   * Specify the company name\n   * @type {string}\n   */\n  export let company = undefined;\n\n  /**\n   * Specify the platform name\n   * Alternatively, use the named slot \"platform\" (e.g., <span slot=\"platform\">...</span>)\n   */\n  export let platformName = \"\";\n\n  /** Set to `true` to persist the hamburger menu */\n  export let persistentHamburgerMenu = false;\n\n  /** Obtain a reference to the HTML anchor element */\n  export let ref = null;\n\n  import { shouldRenderHamburgerMenu } from \"../navStore\";\n  import HamburgerMenu from \"../SideNav/HamburgerMenu.svelte\";\n\n  let winWidth = undefined;\n\n  $: isSideNavOpen =\n    expandedByDefault && winWidth >= 1056 && !persistentHamburgerMenu;\n  $: ariaLabel = company\n    ? `${company} `\n    : \"\" + (uiShellAriaLabel || $$props[\"aria-label\"] || platformName);\n</script>\n\n<svelte:window bind:innerWidth=\"{winWidth}\" />\n\n<header role=\"banner\" aria-label=\"{ariaLabel}\" class:bx--header=\"{true}\">\n  <slot name=\"skip-to-content\" />\n  {#if ($shouldRenderHamburgerMenu && winWidth < 1056) || persistentHamburgerMenu}\n    <HamburgerMenu bind:isOpen=\"{isSideNavOpen}\" />\n  {/if}\n  <a\n    href=\"{href}\"\n    class:bx--header__name=\"{true}\"\n    bind:this=\"{ref}\"\n    {...$$restProps}\n    on:click\n  >\n    {#if company}\n      <span class:bx--header__name--prefix=\"{true}\">{company}&nbsp;</span>\n    {/if}\n    <slot name=\"platform\">{platformName}</slot>\n  </a>\n  <slot />\n</header>\n","<script>\n  /** Set to `true` to use the active state */\n  export let linkIsActive = false;\n\n  /**\n   * Specify the `href` attribute\n   * @type {string}\n   */\n  export let href = undefined;\n\n  /**\n   * Specify the icon props\n   * @type {{ render: import(\"carbon-icons-svelte\").CarbonIcon; skeleton: boolean; }}\n   */\n  export let icon = undefined;\n\n  /** Obtain a reference to the HTML anchor element */\n  export let ref = null;\n\n  import { Icon } from \"../../Icon\";\n</script>\n\n<style>\n  .action-link {\n    text-align: center;\n    align-items: center;\n    vertical-align: middle;\n    justify-content: center;\n    padding-top: 10px;\n  }\n</style>\n\n<a\n  bind:this=\"{ref}\"\n  class:bx--header__action=\"{true}\"\n  class:bx--header__action--active=\"{linkIsActive}\"\n  class:action-link=\"{true}\"\n  href=\"{href}\"\n  rel=\"{$$restProps.target === '_blank' ? 'noopener noreferrer' : undefined}\"\n  {...$$restProps}\n>\n  <Icon {...icon} />\n</a>\n","<div class:bx--header__global=\"{true}\">\n  <slot />\n</div>\n","<script>\n  /** Specify the id for the main element */\n  export let id = \"main-content\";\n</script>\n\n<main id=\"{id}\" class:bx--content=\"{true}\" {...$$restProps}>\n  <slot />\n</main>\n","<script>\n  /** Specify the `href` attribute */\n  export let href = \"#main-content\";\n\n  /** Specify the tabindex */\n  export let tabindex = \"0\";\n</script>\n\n<a\n  href=\"{href}\"\n  tabindex=\"{tabindex}\"\n  class:bx--skip-to-content=\"{true}\"\n  {...$$restProps}\n  on:click\n>\n  <slot>Skip to main content</slot>\n</a>\n","<script>\n  /** Set to `true` to use the active variant */\n  export let isActive = false;\n\n  /**\n   * Specify the icon to render\n   * @type {typeof import(\"carbon-icons-svelte\").CarbonIcon}\n   */\n  export let icon = undefined;\n\n  /** Obtain a reference to the HTML button element */\n  export let ref = null;\n</script>\n\n<button\n  type=\"button\"\n  bind:this=\"{ref}\"\n  class:bx--header__action=\"{true}\"\n  class:bx--header__action--active=\"{isActive}\"\n  {...$$restProps}\n  on:click\n>\n  <slot>\n    <svelte:component this=\"{icon}\" />\n  </slot>\n</button>\n","<script>\n  /** Set to `true` to use the nested variant */\n  export let nested = false;\n</script>\n\n<ul\n  class:bx--list--unordered=\"{true}\"\n  class:bx--list--nested=\"{nested}\"\n  {...$$restProps}\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n>\n  <slot />\n</ul>\n","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"FingerprintRecognition20\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"20\" height=\"20\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M7,5.21a.77.77,0,0,1-.46-1.38A15.46,15.46,0,0,1,16,1c2.66,0,6.48.45,9.5,2.62a.77.77,0,0,1,.18,1.07.78.78,0,0,1-1.08.17A15,15,0,0,0,16,2.53,14,14,0,0,0,7.5,5.05.74.74,0,0,1,7,5.21Z\"></path><path d=\"M28.23,12.26a.78.78,0,0,1-.63-.33C25.87,9.49,22.78,6.24,16,6.24a14,14,0,0,0-11.63,5.7.77.77,0,0,1-1.07.17A.76.76,0,0,1,3.15,11,15.54,15.54,0,0,1,16,4.71c5.61,0,9.81,2.08,12.84,6.34a.77.77,0,0,1-.19,1.07A.79.79,0,0,1,28.23,12.26Z\"></path><path d=\"M12.28,31a.78.78,0,0,1-.72-.49.75.75,0,0,1,.44-1c4.37-1.68,7-5.12,7-9.21a2.8,2.8,0,0,0-3-3c-1.86,0-2.76,1-3,3.35a4.27,4.27,0,0,1-4.52,3.83,4.27,4.27,0,0,1-4.32-4.59A11.71,11.71,0,0,1,16,8.39a12,12,0,0,1,12,11.93,18.66,18.66,0,0,1-1.39,6.5.78.78,0,0,1-1,.41.76.76,0,0,1-.41-1,17.25,17.25,0,0,0,1.27-5.91A10.45,10.45,0,0,0,16,9.92a10.18,10.18,0,0,0-10.38,10,2.77,2.77,0,0,0,2.79,3.06,2.74,2.74,0,0,0,3-2.48c.36-3.11,1.89-4.69,4.56-4.69a4.31,4.31,0,0,1,4.52,4.56c0,4.74-3,8.72-8,10.63A.92.92,0,0,1,12.28,31Z\"></path><path d=\"M19.77,30.28a.81.81,0,0,1-.52-.2.76.76,0,0,1,0-1.08,12.63,12.63,0,0,0,3.54-8.68c0-1.56-.48-6.65-6.7-6.65a6.83,6.83,0,0,0-4.94,1.87A6.17,6.17,0,0,0,9.32,20a.77.77,0,0,1-.77.76h0A.76.76,0,0,1,7.78,20,7.73,7.73,0,0,1,10,14.46a8.34,8.34,0,0,1,6-2.32c6.08,0,8.24,4.4,8.24,8.18A14.09,14.09,0,0,1,20.34,30,.75.75,0,0,1,19.77,30.28Z\"></path><path d=\"M8.66,27.74a14.14,14.14,0,0,1-1.56-.09.76.76,0,1,1,.17-1.52c2.49.28,4.45-.16,5.84-1.32a6.37,6.37,0,0,0,2.12-4.53.75.75,0,0,1,.82-.71.78.78,0,0,1,.72.81A7.89,7.89,0,0,1,14.09,26,8.2,8.2,0,0,1,8.66,27.74Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"LogoGithub20\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"20\" height=\"20\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path fill-rule=\"evenodd\" d=\"M16,2a14,14,0,0,0-4.43,27.28c.7.13,1-.3,1-.67s0-1.21,0-2.38c-3.89.84-4.71-1.88-4.71-1.88A3.71,3.71,0,0,0,6.24,22.3c-1.27-.86.1-.85.1-.85A2.94,2.94,0,0,1,8.48,22.9a3,3,0,0,0,4.08,1.16,2.93,2.93,0,0,1,.88-1.87c-3.1-.36-6.37-1.56-6.37-6.92a5.4,5.4,0,0,1,1.44-3.76,5,5,0,0,1,.14-3.7s1.17-.38,3.85,1.43a13.3,13.3,0,0,1,7,0c2.67-1.81,3.84-1.43,3.84-1.43a5,5,0,0,1,.14,3.7,5.4,5.4,0,0,1,1.44,3.76c0,5.38-3.27,6.56-6.39,6.91a3.33,3.33,0,0,1,.95,2.59c0,1.87,0,3.38,0,3.84s.25.81,1,.67A14,14,0,0,0,16,2Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Sun24\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"24\" height=\"24\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M16,12a4,4,0,1,1-4,4,4.0045,4.0045,0,0,1,4-4m0-2a6,6,0,1,0,6,6,6,6,0,0,0-6-6Z\" transform=\"translate(0 .005)\"></path><path d=\"M6.854 5.375H8.854V10.333H6.854z\" transform=\"rotate(-45 7.86 7.856)\"></path><path d=\"M2 15.005H7V17.005000000000003H2z\"></path><path d=\"M5.375 23.147H10.333V25.147H5.375z\" transform=\"rotate(-45 7.86 24.149)\"></path><path d=\"M15 25.005H17V30.005H15z\"></path><path d=\"M23.147 21.668H25.147V26.625999999999998H23.147z\" transform=\"rotate(-45 24.152 24.149)\"></path><path d=\"M25 15.005H30V17.005000000000003H25z\"></path><path d=\"M21.668 6.854H26.625999999999998V8.854H21.668z\" transform=\"rotate(-45 24.152 7.856)\"></path><path d=\"M15 2.005H17V7.005H15z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Moon24\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"24\" height=\"24\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M13.5025,5.4136A15.0755,15.0755,0,0,0,25.096,23.6082a11.1134,11.1134,0,0,1-7.9749,3.3893c-.1385,0-.2782.0051-.4178,0A11.0944,11.0944,0,0,1,13.5025,5.4136M14.98,3a1.0024,1.0024,0,0,0-.1746.0156A13.0959,13.0959,0,0,0,16.63,28.9973c.1641.006.3282,0,.4909,0a13.0724,13.0724,0,0,0,10.702-5.5556,1.0094,1.0094,0,0,0-.7833-1.5644A13.08,13.08,0,0,1,15.8892,4.38,1.0149,1.0149,0,0,0,14.98,3Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script lang=\"ts\">\n  import { HeaderGlobalAction } from \"carbon-components-svelte\";\n  import Sun24 from \"carbon-icons-svelte/lib/Sun24\";\n  import Moon24 from \"carbon-icons-svelte/lib/Moon24\";\n\n  type Theme = \"white\" | \"g10\" | \"g90\" | \"g100\";\n  const darkTheme: Theme = \"g90\";\n  const lightTheme: Theme = \"white\";\n  let theme: Theme = darkTheme;\n\n  $: document.documentElement.setAttribute(\"theme\", theme);\n  $: darkMode = theme === darkTheme;\n\n  function toggleDarkMode() {\n    theme = darkMode ? lightTheme : darkTheme;\n  }\n</script>\n\n<HeaderGlobalAction\n  on:click={toggleDarkMode}\n  icon={darkMode ? Sun24 : Moon24} />\n","<script>\n  import {\n    Header,\n    HeaderActionLink,\n    HeaderUtilities,\n    SkipToContent,\n  } from \"carbon-components-svelte\";\n  import FingerprintRecognition20 from \"carbon-icons-svelte/lib/FingerprintRecognition20\";\n  import LogoGithub20 from \"carbon-icons-svelte/lib/LogoGithub20\";\n\n  import ToggleTheme from \"./ToggleTheme.svelte\";\n</script>\n\n<Header platformName=\"lawrencethorpe.uk\">\n  <div slot=\"skip-to-content\">\n    <SkipToContent />\n  </div>\n\n  <HeaderUtilities>\n    <HeaderActionLink\n      href=\"https://keyoxide.org/wkd/lawrence@lawrencethorpe.uk\"\n      target=\"_blank\"\n      icon={{ render: FingerprintRecognition20 }} />\n    <HeaderActionLink\n      href=\"https://github.com/thorpelawrence\"\n      target=\"_blank\"\n      icon={{ render: LogoGithub20 }} />\n    <ToggleTheme />\n  </HeaderUtilities>\n</Header>\n","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"LogoGithub32\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"32\" height=\"32\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path fill-rule=\"evenodd\" d=\"M16,2a14,14,0,0,0-4.43,27.28c.7.13,1-.3,1-.67s0-1.21,0-2.38c-3.89.84-4.71-1.88-4.71-1.88A3.71,3.71,0,0,0,6.24,22.3c-1.27-.86.1-.85.1-.85A2.94,2.94,0,0,1,8.48,22.9a3,3,0,0,0,4.08,1.16,2.93,2.93,0,0,1,.88-1.87c-3.1-.36-6.37-1.56-6.37-6.92a5.4,5.4,0,0,1,1.44-3.76,5,5,0,0,1,.14-3.7s1.17-.38,3.85,1.43a13.3,13.3,0,0,1,7,0c2.67-1.81,3.84-1.43,3.84-1.43a5,5,0,0,1,.14,3.7,5.4,5.4,0,0,1,1.44,3.76c0,5.38-3.27,6.56-6.39,6.91a3.33,3.33,0,0,1,.95,2.59c0,1.87,0,3.38,0,3.84s.25.81,1,.67A14,14,0,0,0,16,2Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"LogoLinkedin32\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"32\" height=\"32\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M26.2,4H5.8C4.8,4,4,4.8,4,5.7v20.5c0,0.9,0.8,1.7,1.8,1.7h20.4c1,0,1.8-0.8,1.8-1.7V5.7C28,4.8,27.2,4,26.2,4z M11.1,24.4\tH7.6V13h3.5V24.4z M9.4,11.4c-1.1,0-2.1-0.9-2.1-2.1c0-1.2,0.9-2.1,2.1-2.1c1.1,0,2.1,0.9,2.1,2.1S10.5,11.4,9.4,11.4z M24.5,24.3\tH21v-5.6c0-1.3,0-3.1-1.9-3.1c-1.9,0-2.1,1.5-2.1,2.9v5.7h-3.5V13h3.3v1.5h0.1c0.5-0.9,1.7-1.9,3.4-1.9c3.6,0,4.3,2.4,4.3,5.5V24.3z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"LogoTwitter32\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"32\" height=\"32\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M11.92,24.94A12.76,12.76,0,0,0,24.76,12.1c0-.2,0-.39,0-.59A9.4,9.4,0,0,0,27,9.18a9.31,9.31,0,0,1-2.59.71,4.56,4.56,0,0,0,2-2.5,8.89,8.89,0,0,1-2.86,1.1,4.52,4.52,0,0,0-7.7,4.11,12.79,12.79,0,0,1-9.3-4.71,4.51,4.51,0,0,0,1.4,6,4.47,4.47,0,0,1-2-.56v.05A4.53,4.53,0,0,0,9.5,17.83a4.53,4.53,0,0,1-2,.08A4.51,4.51,0,0,0,11.68,21,9.05,9.05,0,0,1,6.07,23,9.77,9.77,0,0,1,5,22.91a12.77,12.77,0,0,0,6.92,2\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"LogoInstagram32\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"32\" height=\"32\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <circle cx=\"22.406\" cy=\"9.594\" r=\"1.44\"></circle><path d=\"M16,9.8378A6.1622,6.1622,0,1,0,22.1622,16,6.1622,6.1622,0,0,0,16,9.8378ZM16,20a4,4,0,1,1,4-4A4,4,0,0,1,16,20Z\"></path><path d=\"M16,6.1622c3.2041,0,3.5837.0122,4.849.07a6.6418,6.6418,0,0,1,2.2283.4132,3.9748,3.9748,0,0,1,2.2774,2.2774,6.6418,6.6418,0,0,1,.4132,2.2283c.0577,1.2653.07,1.6449.07,4.849s-.0122,3.5837-.07,4.849a6.6418,6.6418,0,0,1-.4132,2.2283,3.9748,3.9748,0,0,1-2.2774,2.2774,6.6418,6.6418,0,0,1-2.2283.4132c-1.2652.0577-1.6446.07-4.849.07s-3.5838-.0122-4.849-.07a6.6418,6.6418,0,0,1-2.2283-.4132,3.9748,3.9748,0,0,1-2.2774-2.2774,6.6418,6.6418,0,0,1-.4132-2.2283c-.0577-1.2653-.07-1.6449-.07-4.849s.0122-3.5837.07-4.849a6.6418,6.6418,0,0,1,.4132-2.2283A3.9748,3.9748,0,0,1,8.9227,6.6453a6.6418,6.6418,0,0,1,2.2283-.4132c1.2653-.0577,1.6449-.07,4.849-.07M16,4c-3.259,0-3.6677.0138-4.9476.0722A8.8068,8.8068,0,0,0,8.14,4.63,6.1363,6.1363,0,0,0,4.63,8.14a8.8068,8.8068,0,0,0-.5578,2.9129C4.0138,12.3323,4,12.741,4,16s.0138,3.6677.0722,4.9476A8.8074,8.8074,0,0,0,4.63,23.8605a6.1363,6.1363,0,0,0,3.51,3.51,8.8068,8.8068,0,0,0,2.9129.5578C12.3323,27.9862,12.741,28,16,28s3.6677-.0138,4.9476-.0722a8.8074,8.8074,0,0,0,2.9129-.5578,6.1363,6.1363,0,0,0,3.51-3.51,8.8074,8.8074,0,0,0,.5578-2.9129C27.9862,19.6677,28,19.259,28,16s-.0138-3.6677-.0722-4.9476A8.8068,8.8068,0,0,0,27.37,8.14a6.1363,6.1363,0,0,0-3.51-3.5095,8.8074,8.8074,0,0,0-2.9129-.5578C19.6677,4.0138,19.259,4,16,4Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"LogoSnapchat32\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"32\" height=\"32\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M27.9774,9.6279a7.33,7.33,0,0,0-.1186-1.2888,5.2458,5.2458,0,0,0-.4872-1.4948,5.1869,5.1869,0,0,0-.9988-1.3324,4.9557,4.9557,0,0,0-2.1805-1.2433,8.8444,8.8444,0,0,0-2.3059-.2458l-.0044-.0119H10.1143l-.0007.0119a12.578,12.578,0,0,0-1.3221.0591A6.2955,6.2955,0,0,0,7.3792,4.4,5.1155,5.1155,0,0,0,4.2538,7.8152a8.8,8.8,0,0,0-.2459,2.2855L4,21.9065a14.9206,14.9206,0,0,0,.1088,1.5992A5.53,5.53,0,0,0,4.6,25.1205a5.17,5.17,0,0,0,1.443,1.744,4.6907,4.6907,0,0,0,1.4442.7822,7.83,7.83,0,0,0,2.3741.3484c.5034.0032,1.0069.0158,1.5106.0137,3.659-.0154,7.3178.0264,10.9767-.0226a8.6316,8.6316,0,0,0,1.44-.1528A4.8765,4.8765,0,0,0,26.2,26.6613a4.9915,4.9915,0,0,0,1.5931-2.6546,9.6646,9.6646,0,0,0,.2074-2.1v-.1407C28,21.7112,27.9793,9.7855,27.9774,9.6279ZM24.7635,20.7326c-.1536.36-.93.6577-2.2433.8606-.1232.019-.1751.2183-.2463.5445-.0293.1348-.0592.2669-.1.4057a.2451.2451,0,0,1-.26.1943h-.0205a2.1011,2.1011,0,0,1-.3738-.0472,4.921,4.921,0,0,0-.9852-.1044,4.37,4.37,0,0,0-.7106.06,3.4048,3.4048,0,0,0-1.3483.6888,3.912,3.912,0,0,1-2.3668.9328c-.05,0-.0973-.0018-.1335-.0035-.0287.0024-.0584.0035-.0881.0035a3.9062,3.9062,0,0,1-2.3651-.9322,3.4118,3.4118,0,0,0-1.35-.69,4.3612,4.3612,0,0,0-.71-.06,4.858,4.858,0,0,0-.9852.1115,2.1872,2.1872,0,0,1-.3737.0536.2574.2574,0,0,1-.2807-.2012c-.0414-.1407-.0711-.277-.1-.4082-.0716-.328-.1237-.5282-.2465-.5472-1.3133-.2026-2.0893-.5011-2.2439-.8626a.3349.3349,0,0,1-.0272-.114.2109.2109,0,0,1,.1764-.22,4.5854,4.5854,0,0,0,2.7564-1.6391,6.1681,6.1681,0,0,0,.94-1.4616l.0048-.01a.943.943,0,0,0,.09-.79c-.1693-.3991-.73-.5769-1.1007-.6946-.0921-.0291-.1794-.0567-.2488-.0844-.3288-.13-.8693-.4041-.7973-.7828a.7333.7333,0,0,1,.7127-.4683.5052.5052,0,0,1,.2158.043,2.1572,2.1572,0,0,0,.8916.2355.7465.7465,0,0,0,.5134-.1569q-.0145-.2629-.0318-.5256a8.8742,8.8742,0,0,1,.2122-3.5447A4.6074,4.6074,0,0,1,15.8173,7.76q.177-.0015.3539-.0033a4.6152,4.6152,0,0,1,4.2853,2.7606,8.884,8.884,0,0,1,.2118,3.5478l-.0036.0574c-.01.1629-.02.317-.0278.4665a.7215.7215,0,0,0,.4656.1558,2.2321,2.2321,0,0,0,.84-.234.6628.6628,0,0,1,.2751-.0545.832.832,0,0,1,.3133.06l.005.0019a.5825.5825,0,0,1,.4409.4781c.0034.1835-.133.4578-.8039.7226-.0687.0272-.1564.0551-.2489.0844-.3712.1178-.9312.2956-1.1005.6944a.9422.9422,0,0,0,.09.7893l.0048.01a5.4311,5.4311,0,0,0,3.6967,3.1005.211.211,0,0,1,.1764.22A.3408.3408,0,0,1,24.7635,20.7326Z\"></path><path fill=\"none\" d=\"M24.7635,20.7326c-.1536.36-.93.6577-2.2433.8606-.1232.019-.1751.2183-.2463.5445-.0293.1348-.0592.2669-.1.4057a.2451.2451,0,0,1-.26.1943h-.0205a2.1011,2.1011,0,0,1-.3738-.0472,4.921,4.921,0,0,0-.9852-.1044,4.37,4.37,0,0,0-.7106.06,3.4048,3.4048,0,0,0-1.3483.6888,3.912,3.912,0,0,1-2.3668.9328c-.05,0-.0973-.0018-.1335-.0035-.0287.0024-.0584.0035-.0881.0035a3.9062,3.9062,0,0,1-2.3651-.9322,3.4118,3.4118,0,0,0-1.35-.69,4.3612,4.3612,0,0,0-.71-.06,4.858,4.858,0,0,0-.9852.1115,2.1872,2.1872,0,0,1-.3737.0536.2574.2574,0,0,1-.2807-.2012c-.0414-.1407-.0711-.277-.1-.4082-.0716-.328-.1237-.5282-.2465-.5472-1.3133-.2026-2.0893-.5011-2.2439-.8626a.3349.3349,0,0,1-.0272-.114.2109.2109,0,0,1,.1764-.22,4.5854,4.5854,0,0,0,2.7564-1.6391,6.1681,6.1681,0,0,0,.94-1.4616l.0048-.01a.943.943,0,0,0,.09-.79c-.1693-.3991-.73-.5769-1.1007-.6946-.0921-.0291-.1794-.0567-.2488-.0844-.3288-.13-.8693-.4041-.7973-.7828a.7333.7333,0,0,1,.7127-.4683.5052.5052,0,0,1,.2158.043,2.1572,2.1572,0,0,0,.8916.2355.7465.7465,0,0,0,.5134-.1569q-.0145-.2629-.0318-.5256a8.8742,8.8742,0,0,1,.2122-3.5447A4.6074,4.6074,0,0,1,15.8173,7.76q.177-.0015.3539-.0033a4.6152,4.6152,0,0,1,4.2853,2.7606,8.884,8.884,0,0,1,.2118,3.5478l-.0036.0574c-.01.1629-.02.317-.0278.4665a.7215.7215,0,0,0,.4656.1558,2.2321,2.2321,0,0,0,.84-.234.6628.6628,0,0,1,.2751-.0545.832.832,0,0,1,.3133.06l.005.0019a.5825.5825,0,0,1,.4409.4781c.0034.1835-.133.4578-.8039.7226-.0687.0272-.1564.0551-.2489.0844-.3712.1178-.9312.2956-1.1005.6944a.9422.9422,0,0,0,.09.7893l.0048.01a5.4311,5.4311,0,0,0,3.6967,3.1005.211.211,0,0,1,.1764.22A.3408.3408,0,0,1,24.7635,20.7326Z\" data-icon-path=\"inner-path\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"LogoFacebook32\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"32\" height=\"32\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M26.67,4H5.33A1.34,1.34,0,0,0,4,5.33V26.67A1.34,1.34,0,0,0,5.33,28H16.82V18.72H13.7V15.09h3.12V12.42c0-3.1,1.89-4.79,4.67-4.79.93,0,1.86,0,2.79.14V11H22.37c-1.51,0-1.8.72-1.8,1.77v2.31h3.6l-.47,3.63H20.57V28h6.1A1.34,1.34,0,0,0,28,26.67V5.33A1.34,1.34,0,0,0,26.67,4Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"LogoYoutube32\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"32\" height=\"32\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M29.41,9.26a3.5,3.5,0,0,0-2.47-2.47C24.76,6.2,16,6.2,16,6.2s-8.76,0-10.94.59A3.5,3.5,0,0,0,2.59,9.26,36.13,36.13,0,0,0,2,16a36.13,36.13,0,0,0,.59,6.74,3.5,3.5,0,0,0,2.47,2.47C7.24,25.8,16,25.8,16,25.8s8.76,0,10.94-.59a3.5,3.5,0,0,0,2.47-2.47A36.13,36.13,0,0,0,30,16,36.13,36.13,0,0,0,29.41,9.26ZM13.2,20.2V11.8L20.47,16Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Email32\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"32\" height=\"32\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M28,6H4A2,2,0,0,0,2,8V24a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V8A2,2,0,0,0,28,6ZM25.8,8,16,14.78,6.2,8ZM4,24V8.91l11.43,7.91a1,1,0,0,0,1.14,0L28,8.91V24Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script lang=\"ts\">\n  import { Link } from \"carbon-components-svelte\";\n  import LogoGithub from \"carbon-icons-svelte/lib/LogoGithub32\";\n  import LogoLinkedin from \"carbon-icons-svelte/lib/LogoLinkedin32\";\n  import LogoTwitter from \"carbon-icons-svelte/lib/LogoTwitter32\";\n  import LogoInstagram from \"carbon-icons-svelte/lib/LogoInstagram32\";\n  import LogoSnapchat from \"carbon-icons-svelte/lib/LogoSnapchat32\";\n  import LogoFacebook from \"carbon-icons-svelte/lib/LogoFacebook32\";\n  import LogoYoutube from \"carbon-icons-svelte/lib/LogoYoutube32\";\n  import Email from \"carbon-icons-svelte/lib/Email32\";\n</script>\n\n<style lang=\"scss\">\n  footer {\n    height: 4rem;\n    padding: 1rem 10px;\n    display: flex;\n    justify-content: space-around;\n  }\n</style>\n\n<footer>\n  <Link href=\"https://github.com/thorpelawrence\">\n    <LogoGithub />\n  </Link>\n  <Link href=\"https://www.linkedin.com/in/thorpelawrence/\">\n    <LogoLinkedin />\n  </Link>\n  <Link href=\"https://twitter.com/thorpe_lawrence\">\n    <LogoTwitter />\n  </Link>\n  <Link href=\"https://instagram.com/thorpe_lawrence\">\n    <LogoInstagram />\n  </Link>\n  <Link href=\"https://www.snapchat.com/add/thorpe_lawrence\">\n    <LogoSnapchat />\n  </Link>\n  <Link href=\"https://www.facebook.com/thorpe.lawrence\">\n    <LogoFacebook />\n  </Link>\n  <Link href=\"https://www.youtube.com/c/lawrencethorpe\">\n    <LogoYoutube />\n  </Link>\n  <Link href=\"mailto:lawrence@lawrencethorpe.uk\">\n    <Email />\n  </Link>\n</footer>\n","/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* global DOMException */\n\nmodule.exports = clipboardCopy\n\nfunction makeError () {\n  return new DOMException('The request is not allowed', 'NotAllowedError')\n}\n\nasync function copyClipboardApi (text) {\n  // Use the Async Clipboard API when available. Requires a secure browsing\n  // context (i.e. HTTPS)\n  if (!navigator.clipboard) {\n    throw makeError()\n  }\n  return navigator.clipboard.writeText(text)\n}\n\nasync function copyExecCommand (text) {\n  // Put the text to copy into a <span>\n  const span = document.createElement('span')\n  span.textContent = text\n\n  // Preserve consecutive spaces and newlines\n  span.style.whiteSpace = 'pre'\n  span.style.webkitUserSelect = 'auto'\n  span.style.userSelect = 'all'\n\n  // Add the <span> to the page\n  document.body.appendChild(span)\n\n  // Make a selection object representing the range of text selected by the user\n  const selection = window.getSelection()\n  const range = window.document.createRange()\n  selection.removeAllRanges()\n  range.selectNode(span)\n  selection.addRange(range)\n\n  // Copy text to the clipboard\n  let success = false\n  try {\n    success = window.document.execCommand('copy')\n  } finally {\n    // Cleanup\n    selection.removeAllRanges()\n    window.document.body.removeChild(span)\n  }\n\n  if (!success) throw makeError()\n}\n\nasync function clipboardCopy (text) {\n  try {\n    await copyClipboardApi(text)\n  } catch (err) {\n    // ...Otherwise, use document.execCommand() fallback\n    try {\n      await copyExecCommand(text)\n    } catch (err2) {\n      throw (err2 || err || makeError())\n    }\n  }\n}\n","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Camera16\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"16\" height=\"16\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M29,26H3a1,1,0,0,1-1-1V8A1,1,0,0,1,3,7H9.46l1.71-2.55A1,1,0,0,1,12,4h8a1,1,0,0,1,.83.45L22.54,7H29a1,1,0,0,1,1,1V25A1,1,0,0,1,29,26ZM4,24H28V9H22a1,1,0,0,1-.83-.45L19.46,6H12.54L10.83,8.55A1,1,0,0,1,10,9H4Z\"></path><path d=\"M16,22a6,6,0,1,1,6-6A6,6,0,0,1,16,22Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,16,12Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script lang=\"ts\">\n  import { Button, CodeSnippet } from \"carbon-components-svelte\";\n  import Camera16 from \"carbon-icons-svelte/lib/Camera16\";\n\n  export let href: string;\n</script>\n\n<style lang=\"scss\">\n  .caption {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    max-width: 100%;\n    display: inline-flex;\n\n    :global(a) {\n      cursor: pointer !important;\n    }\n  }\n</style>\n\n<div class=\"caption\">\n  <Button\n    hasIconOnly\n    icon={Camera16}\n    iconDescription=\"Image source\"\n    tooltipPosition=\"right\"\n    tooltipAlignment=\"center\"\n    size=\"field\"\n    {href} />\n  <CodeSnippet hideCopyButton>\n    <slot />\n  </CodeSnippet>\n</div>\n","<script>\n  import { CodeSnippet, Content, Tile } from \"carbon-components-svelte\";\n  import copy from \"clipboard-copy\";\n  import Caption from \"./common/Caption.svelte\";\n\n  const username = \"thorpe_lawrence\";\n</script>\n\n<style lang=\"scss\">\n  :global(#main-content) {\n    background-image: url(\"/images/enigma.jpg\");\n    background-size: cover;\n    background-position: center;\n    height: calc(100% - 3rem);\n  }\n\n  .name :global {\n    position: absolute;\n    top: calc(30%);\n    left: 50%;\n    transform: translateX(-50%);\n  }\n</style>\n\n<Content>\n  <div class=\"name\">\n    <Tile light>\n      <h1>Lawrence Thorpe</h1>\n    </Tile>\n    <CodeSnippet on:click={() => copy(username)}>{username}</CodeSnippet>\n  </div>\n  <Caption href=\"https://www.instagram.com/p/B78zyHhpHid/\">\n    Enigma Machine, Bletchley Park, Kodak TRI-X 400 +2, Lawrence Thorpe 2020\n  </Caption>\n</Content>\n","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"DocumentPdf16\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"16\" height=\"16\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M30 18L30 16 24 16 24 26 26 26 26 22 29 22 29 20 26 20 26 18 30 18zM19 26H15V16h4a3.0033 3.0033 0 013 3v4A3.0033 3.0033 0 0119 26zm-2-2h2a1.0011 1.0011 0 001-1V19a1.0011 1.0011 0 00-1-1H17zM11 16H6V26H8V23h3a2.0027 2.0027 0 002-2V18A2.0023 2.0023 0 0011 16zM8 21V18h3l.001 3z\"></path><path d=\"M22,14V10a.9092.9092,0,0,0-.3-.7l-7-7A.9087.9087,0,0,0,14,2H4A2.0059,2.0059,0,0,0,2,4V28a2,2,0,0,0,2,2H20V28H4V4h8v6a2.0059,2.0059,0,0,0,2,2h6v2Zm-8-4V4.4L19.6,10Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  import { Column, Grid, Link, Row } from \"carbon-components-svelte\";\n  import DocumentPdf16 from \"carbon-icons-svelte/lib/DocumentPdf16\";\n</script>\n\n<style>\n  h2 {\n    margin: 1em 0;\n  }\n  p {\n    margin-bottom: 1em;\n  }\n</style>\n\n<section>\n  <Grid>\n    <Row>\n      <Column>\n        <h2>About me</h2>\n        <p>\n          Graduate software engineer, Computer Science, University of Lincoln,\n          UK.\n          <Link href=\"/static/Project.pdf\" target=\"_blank\">\n            University Project\n            <DocumentPdf16 />\n          </Link>&#8288;.\n        </p>\n        <p>\n          Experience with a variety of languages ranging from high to\n          lower-level programming; including C/C++, Rust, C#, JavaScript/TypeScript\n          (NodeJS), and Haskell. Involvement and experience in teamwork\n          utilising the agile development process and Git.\n        </p>\n        <p>\n          Exposure to development tooling involving graphics frameworks such as\n          OpenGL.\n        </p>\n        <p>\n          A focus on creating desktop apps and tools, with particular interest\n          in working with and contribution to open source projects and tools,\n          including Linux.\n        </p>\n      </Column>\n    </Row>\n  </Grid>\n</section>\n","<script lang=\"ts\">\n  import {\n    Column,\n    Grid,\n    Link,\n    Row,\n    StructuredList,\n    StructuredListBody,\n    StructuredListCell,\n    StructuredListRow,\n  } from \"carbon-components-svelte\";\n\n  import type { Image } from \"./common/types\";\n\n  interface Project {\n    description: string;\n    href: string;\n    image: Image;\n  }\n\n  const projects: Project[] = [\n    {\n      description:\n        \"Pixsrt is a pixel sorter to glitch images, created in C++ with Qt.\",\n      href: \"https://github.com/thorpelawrence/pixsrt\",\n      image: {\n        src: \"https://git.io/v77rh\",\n        alt: \"Pixsrt\",\n      },\n    },\n    {\n      description:\n        \"Connect Control for Spotify allows you to control Spotify Connect devices with Amazon Alexa.\",\n      href: \"https://github.com/thorpelawrence/alexa-spotify-connect\",\n      image: {\n        src: \"https://git.io/vd4Iu\",\n        alt: \"Connect Control for Spotify\",\n      },\n    },\n    {\n      description:\n        \"Wavehop is an endless runner game where each jump button changes your colour, created for GGJ2017.\",\n      href:\n        \"https://play.google.com/store/apps/details?id=com.ReGroove.Wavehop\",\n      image: {\n        src: \"https://i.imgur.com/ANtDU8V.png\",\n        alt: \"Wavehop\",\n      },\n    },\n    {\n      description: \"npm-github-packages-auth-helper is a tool written in TypeScript to manage npm token storage using the system keychain.\",\n      href: \"https://github.com/thorpelawrence/npm-github-packages-auth-helper\",\n      image: {\n        src:\n          \"https://github.com/thorpelawrence/npm-github-packages-auth-helper/raw/main/images/logo-keyring.png\",\n        alt: \"npm-github-packages-auth-helper\",\n      },\n    },\n    {\n      description:\n        \"Spectrum Editor is a text editor with a ZX Spectrum theme, created with Electron and NodeJS.\",\n      href: \"https://github.com/thorpelawrence/spectrum-editor\",\n      image: {\n        src: \"https://git.io/v77r7\",\n        alt: \"Spectrum Editor\",\n      },\n    },\n    {\n      description:\n        \"Quizics is a C# physics quiz for teachers/students, originally completed for Computing A-Levels.\",\n      href: \"https://github.com/thorpelawrence/quizics/blob/master/README.md\",\n      image: {\n        src: \"https://git.io/JfaVr\",\n        alt: \"Quizics\",\n      },\n    },\n  ];\n</script>\n\n<style>\n  img {\n    max-width: 100px;\n  }\n\n  h2 {\n    margin-top: 1em;\n    margin-bottom: 0.5em;\n  }\n\n  section :global(.description) {\n    vertical-align: middle;\n  }\n</style>\n\n<section>\n  <Grid>\n    <Row>\n      <Column>\n        <h2>Projects</h2>\n      </Column>\n    </Row>\n    <Row noGutter>\n      <Column>\n        <StructuredList>\n          <StructuredListBody>\n            {#each projects as { description, href, image: { src, alt } }}\n              <StructuredListRow>\n                <StructuredListCell>\n                  <Link {href} target=\"_blank\"><img {src} {alt} /></Link>\n                </StructuredListCell>\n                <StructuredListCell class=\"description\">\n                  <span>{description}</span>\n                </StructuredListCell>\n              </StructuredListRow>\n            {/each}\n          </StructuredListBody>\n        </StructuredList>\n      </Column>\n    </Row>\n  </Grid>\n</section>\n","<script lang=\"ts\">\n  import {\n    Column,\n    Grid,\n    Link,\n    Row,\n    StructuredList,\n    StructuredListBody,\n    StructuredListCell,\n    StructuredListRow,\n  } from \"carbon-components-svelte\";\n\n  import type { Image } from \"./common/types\";\n\n  interface Certification {\n    title: string;\n    href: string;\n    image: Image;\n  }\n\n  const certifications: Certification[] = [\n    {\n      title: \"MTA: Database Fundamentals 2018\",\n      href:\n        \"https://www.youracclaim.com/badges/404bcfec-4dc1-4103-b4f8-e2ad71f3e31d/linked_in_profile\",\n      image: {\n        src: \"/images/certifications/mta-database-fundamentals-2018.png\",\n        alt: \"MTA: Database Fundamentals 2018 Badge\",\n      },\n    },\n    {\n      title: \"MTA: Networking Fundamentals 2018\",\n      href:\n        \"https://www.youracclaim.com/badges/c8fc24bb-e24b-464d-8f39-bec5c8d42b57/linked_in_profile\",\n      image: {\n        src: \"/images/certifications/mta-networking-fundamentals-2018.png\",\n        alt: \"MTA: Networking Fundamentals 2018 Badge\",\n      },\n    },\n    {\n      title: \"MTA: Security Fundamentals 2019\",\n      href:\n        \"https://www.youracclaim.com/badges/58ab4c62-1f70-4075-9bba-d401884be37d/linked_in_profile\",\n      image: {\n        src: \"/images/certifications/mta-security-fundamentals-2019.png\",\n        alt: \"MTA: Security Fundamentals 2019 Badge\",\n      },\n    },\n    {\n      title: \"MTA: Cloud Fundamentals 2019\",\n      href:\n        \"https://www.youracclaim.com/badges/2f36501e-c674-4634-b1a0-fc294072d38c/linked_in_profile\",\n      image: {\n        src: \"/images/certifications/mta-cloud-fundamentals-2019.png\",\n        alt: \"MTA: Cloud Fundamentals 2019 Badge\",\n      },\n    },\n    {\n      title: \"Google Cloud Platform Fundamentals: Core Infrastructure\",\n      href:\n        \"https://www.coursera.org/account/accomplishments/verify/ZPA4GGTX3KLW\",\n      image: {\n        src: \"/images/certifications/google-cloud-platform.png\",\n        alt: \"Google Cloud Platform Logo\",\n      },\n    },\n  ];\n</script>\n\n<style>\n  img {\n    max-width: 100px;\n  }\n\n  h2 {\n    margin-bottom: 0.5em;\n  }\n\n  section :global(.title) {\n    vertical-align: middle;\n  }\n</style>\n\n<section>\n  <Grid>\n    <Row>\n      <Column>\n        <h2>Certification</h2>\n      </Column>\n    </Row>\n    <Row noGutter>\n      <Column>\n        <StructuredList>\n          <StructuredListBody>\n            {#each certifications as { title, href, image: { src, alt } }}\n              <StructuredListRow>\n                <StructuredListCell>\n                  <Link {href} target=\"_blank\"><img {src} {alt} /></Link>\n                </StructuredListCell>\n                <StructuredListCell class=\"title\">\n                  <span>{title}</span>\n                </StructuredListCell>\n              </StructuredListRow>\n            {/each}\n          </StructuredListBody>\n        </StructuredList>\n      </Column>\n    </Row>\n  </Grid>\n</section>\n","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Laptop16\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"16\" height=\"16\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M26,24H6a2.0023,2.0023,0,0,1-2-2V8A2.002,2.002,0,0,1,6,6H26a2.0023,2.0023,0,0,1,2,2V22A2.0027,2.0027,0,0,1,26,24ZM6,8V22H26V8Z\" transform=\"translate(0 .005)\"></path><path d=\"M2 26.005H30V28.005H2z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"Hashtag16\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"16\" height=\"16\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M28,12V10H22V4H20v6H12V4H10v6H4v2h6v8H4v2h6v6h2V22h8v6h2V22h6V20H22V12Zm-8,8H12V12h8Z\"></path>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  let className = undefined;\n  export { className as class };\n  export let id = undefined;\n  export let tabindex = undefined;\n  export let focusable = false;\n  export let title = undefined;\n  export let style = undefined;\n\n  $: ariaLabel = $$props['aria-label'];\n  $: ariaLabelledBy = $$props['aria-labelledby'];\n  $: labelled = ariaLabel || ariaLabelledBy || title;\n  $: attributes = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-hidden': labelled ? undefined : true,\n    role: labelled ? 'img' : undefined,\n    focusable: tabindex === '0' ? true : focusable,\n    tabindex\n  };\n</script>\n\n<!-- svelte-ignore a11y-mouse-events-have-key-events -->\n<svg\n  data-carbon-icon=\"GameConsole16\"\n  on:click\n  on:mouseover\n  on:mouseenter\n  on:mouseleave\n  on:keyup\n  on:keydown\n  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" fill=\"currentColor\" width=\"16\" height=\"16\"\n  class={className}\n  preserveAspectRatio=\"xMidYMid meet\"\n  {style}\n  {id}\n  {...attributes}>\n  <path d=\"M7.51,26a5.48,5.48,0,0,1-1.44-.19A5.6,5.6,0,0,1,2.19,19l2.33-8.84A5.54,5.54,0,0,1,7.11,6.73a5.43,5.43,0,0,1,4.15-.54A5.52,5.52,0,0,1,14.7,9h2.6a5.49,5.49,0,0,1,3.44-2.81,5.43,5.43,0,0,1,4.15.54,5.57,5.57,0,0,1,2.59,3.41L29.81,19a5.6,5.6,0,0,1-3.89,6.83,5.43,5.43,0,0,1-4.15-.54,5.54,5.54,0,0,1-2.59-3.41L19,21H13l-.23.86a5.54,5.54,0,0,1-2.59,3.41A5.46,5.46,0,0,1,7.51,26ZM9.83,8a3.49,3.49,0,0,0-1.72.46,3.6,3.6,0,0,0-1.66,2.19L4.12,19.49A3.6,3.6,0,0,0,6.6,23.88a3.43,3.43,0,0,0,2.62-.34,3.54,3.54,0,0,0,1.66-2.19L11.5,19h9l.61,2.35a3.58,3.58,0,0,0,1.66,2.19,3.46,3.46,0,0,0,2.63.34,3.58,3.58,0,0,0,2.47-4.39l-2.33-8.84a3.55,3.55,0,0,0-1.65-2.19,3.46,3.46,0,0,0-2.63-.34,3.55,3.55,0,0,0-2.37,2.22l-.24.66h-5.3l-.24-.66a3.56,3.56,0,0,0-2.38-2.22A3.48,3.48,0,0,0,9.83,8Z\"></path><path d=\"M10,16a2,2,0,1,1,2-2A2,2,0,0,1,10,16Zm0-2Z\"></path><circle cx=\"22\" cy=\"12\" r=\"1\"></circle><circle cx=\"22\" cy=\"16\" r=\"1\"></circle><circle cx=\"20\" cy=\"14\" r=\"1\"></circle><circle cx=\"24\" cy=\"14\" r=\"1\"></circle>\n  <slot>\n    {#if title}\n      <title>{title}</title>\n    {/if}\n  </slot>\n</svg>","<script>\n  import {\n    Column,\n    Grid,\n    ListItem,\n    Row,\n    Tile,\n    UnorderedList,\n  } from \"carbon-components-svelte\";\n  import Laptop16 from \"carbon-icons-svelte/lib/Laptop16\";\n  import Hashtag16 from \"carbon-icons-svelte/lib/Hashtag16\";\n  import GameConsole16 from \"carbon-icons-svelte/lib/GameConsole16\";\n</script>\n\n<style lang=\"scss\">\n  h2 {\n    margin-bottom: 1em;\n  }\n\n  section {\n    margin-bottom: 2em;\n\n    :global {\n      li {\n        span,\n        svg {\n          vertical-align: middle;\n        }\n\n        svg {\n          margin-right: 0.6em;\n        }\n      }\n    }\n  }\n</style>\n\n<section>\n  <Grid>\n    <Row>\n      <Column>\n        <h2>Events</h2>\n      </Column>\n    </Row>\n    <Row>\n      <Column>\n        <UnorderedList>\n          <ListItem>\n            <Laptop16 /><span>LincolnHack 2016, 2018</span>\n          </ListItem>\n          <ListItem>\n            <Hashtag16 /><span>Google HashCode 2017, 2019</span>\n          </ListItem>\n          <ListItem>\n            <GameConsole16 /><span>Global Game Jam 2017, 2019</span>\n          </ListItem>\n        </UnorderedList>\n      </Column>\n    </Row>\n  </Grid>\n</section>\n","<script>\n  import Caption from \"./common/Caption.svelte\";\n</script>\n\n<style lang=\"scss\">\n  section {\n    position: relative;\n    height: calc(100vh - 7rem);\n    background-image: url(\"/images/cathedral.jpg\");\n    background-size: cover;\n    background-position: center;\n  }\n</style>\n\n<section>\n  <Caption href=\"https://www.instagram.com/p/B8PFXV3pXnq/\">\n    Lincoln Cathedral, Kodak TRI-X 400 +2, Lawrence Thorpe 2020\n  </Caption>\n</section>\n","import App from \"./App.svelte\";\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["run","fn","custom_event","type","detail","bubbles","cancelable","CustomEvent","current_component","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","tick","then","flush","add_render_callback","push","seen_callbacks","Set","flushidx","saved_component","length","update","$$","e","pop","i","callback","has","add","clear","fragment","before_update","forEach","dirty","p","ctx","after_update","target","undefined","insert","size","href","inline","disabled","visited","ref","small","key","kind","hasIconOnly","icon","iconDescription","tooltipAlignment","tooltipPosition","as","skeleton","tabindex","context","get","declareRef","buttonProps","role","$$restProps","class","filter","Boolean","join","append","feedback","feedbackTimeout","animation","timeout","clearTimeout","on_mount","setTimeout","animationName","className","id","focusable","title","style","ariaLabel","$$props","ariaLabelledBy","labelled","attributes","code","expanded","hideCopyButton","wrapText","light","copyButtonDescription","copyLabel","showLessText","showMoreText","showMoreLess","Math","random","toString","setShowMoreLess","getBoundingClientRect","height","expandText","condensed","narrow","fullWidth","noGutter","noGutterLeft","noGutterRight","padding","props","aspectRatio","sm","md","lg","xlg","max","breakpoints","columnClass","map","breakpoint","name","bp","span","offset","render","selected","border","selection","dispatch","callbacks","event","slice","call","defaultPrevented","selectedValue","writable","value","set","$selectedValue","head","noWrap","label","shouldRenderHamburgerMenu","Close20","Menu20","isOpen","expandedByDefault","isSideNavOpen","uiShellAriaLabel","company","platformName","persistentHamburgerMenu","winWidth","linkIsActive","isActive","nested","Sun24","Moon24","darkTheme","theme","FingerprintRecognition20","LogoGithub20","makeError","DOMException","copyClipboardApi","text","navigator","clipboard","writeText","copyExecCommand","document","createElement","textContent","whiteSpace","webkitUserSelect","userSelect","body","appendChild","window","getSelection","range","createRange","removeAllRanges","selectNode","addRange","success","execCommand","removeChild","_context3","Camera16","username","copy","description","image","src","alt"],"mappings":"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"}